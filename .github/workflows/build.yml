name: Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
          - platform: 'ubuntu-22.04'
          - platform: 'ubuntu-22.04-arm' # for Arm based linux.
          - platform: 'windows-latest'
          - platform: 'windows-11-arm' # for Windows ARM64
            args: '--target aarch64-pc-windows-msvc'
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev \
            libjavascriptcoregtk-4.1-dev libsoup-3.0-dev
      
      - name: Install dependencies (ubuntu-arm only)
        if: matrix.platform == 'ubuntu-22.04-arm'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
           sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev xdg-utils

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies
        run: npm install

      - name: Prebuild
        run: make prebuild
        
      - name: Add rust target
        if : matrix.args != null
        run: rustup target add $(echo "${{ matrix.args }}" | cut -d' ' -f2)

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
